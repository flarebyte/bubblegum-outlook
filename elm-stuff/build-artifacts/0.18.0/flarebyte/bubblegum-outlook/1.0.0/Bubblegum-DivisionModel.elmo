var _flarebyte$bubblegum_outlook$Bubblegum_DivisionModel$toTriples = function (model) {
	return A2(
		_elm_lang$core$Basics_ops['++'],
		_flarebyte$bubblegum_outlook$Bubblegum_FieldModel$toTriples(model.field),
		_elm_lang$core$List$concat(
			A2(_elm_lang$core$List$map, _flarebyte$bubblegum_outlook$Bubblegum_SectionModel$toTriples, model.sections)));
};
var _flarebyte$bubblegum_outlook$Bubblegum_DivisionModel$findSectionsInDivision = F2(
	function (divisionId, list) {
		return _flarebyte$bubblegum_outlook$Bubblegum_ObjectTriple$unique(
			A2(
				_elm_lang$core$List$map,
				function (_) {
					return _.subject;
				},
				A2(
					_elm_lang$core$List$filter,
					function (t) {
						return _elm_lang$core$Native_Utils.eq(t.predicate, _flarebyte$bubblegum_outlook$Bubblegum_Vocabulary$ui_partOfComponent) && _elm_lang$core$Native_Utils.eq(t.object, divisionId);
					},
					list)));
	});
var _flarebyte$bubblegum_outlook$Bubblegum_DivisionModel$fromTriples = F2(
	function (divisionId, tripleList) {
		return {
			field: A2(_flarebyte$bubblegum_outlook$Bubblegum_FieldModel$fromTriples, divisionId, tripleList),
			sections: A2(
				_elm_lang$core$List$map,
				function (s) {
					return A2(_flarebyte$bubblegum_outlook$Bubblegum_SectionModel$fromTriples, s, tripleList);
				},
				A2(_flarebyte$bubblegum_outlook$Bubblegum_DivisionModel$findSectionsInDivision, divisionId, tripleList))
		};
	});
var _flarebyte$bubblegum_outlook$Bubblegum_DivisionModel$Model = F2(
	function (a, b) {
		return {field: a, sections: b};
	});
