var _flarebyte$bubblegum_outlook$Bubblegum_Outlook$tupleToTriple = F2(
	function (subject, keyValue) {
		return {
			subject: subject,
			predicate: _elm_lang$core$Tuple$first(keyValue),
			object: _elm_lang$core$Tuple$second(keyValue)
		};
	});
var _flarebyte$bubblegum_outlook$Bubblegum_Outlook$createListOfTriple = F2(
	function (subject, keyValueList) {
		return A2(
			_elm_lang$core$List$map,
			_flarebyte$bubblegum_outlook$Bubblegum_Outlook$tupleToTriple(subject),
			keyValueList);
	});
var _flarebyte$bubblegum_outlook$Bubblegum_Outlook$prominenceToString = function (prominence) {
	var _p0 = prominence;
	switch (_p0.ctor) {
		case 'Hidden':
			return 'hidden';
		case 'ReadOnly':
			return 'read-only';
		case 'Visible':
			return 'visible';
		default:
			return 'important';
	}
};
var _flarebyte$bubblegum_outlook$Bubblegum_Outlook$toIntOrDefault = F2(
	function ($default, str) {
		var _p1 = str;
		if (_p1.ctor === 'Nothing') {
			return $default;
		} else {
			return A2(
				_elm_lang$core$Result$withDefault,
				$default,
				_elm_lang$core$String$toInt(_p1._0));
		}
	});
var _flarebyte$bubblegum_outlook$Bubblegum_Outlook$findProperty = F2(
	function (name, list) {
		findProperty:
		while (true) {
			var _p2 = list;
			if (_p2.ctor === '[]') {
				return _elm_lang$core$Maybe$Nothing;
			} else {
				var _p3 = _p2._0;
				if (_elm_lang$core$Native_Utils.eq(_p3.predicate, name)) {
					return _elm_lang$core$Maybe$Just(_p3.object);
				} else {
					var _v3 = name,
						_v4 = _p2._1;
					name = _v3;
					list = _v4;
					continue findProperty;
				}
			}
		}
	});
var _flarebyte$bubblegum_outlook$Bubblegum_Outlook$u = {id: 'http://flarebyte.github.io/ontologies/2018/user-interface#id', widgetType: 'http://flarebyte.github.io/ontologies/2018/user-interface#widget-type', position: 'http://flarebyte.github.io/ontologies/2018/user-interface#position', label: 'http://flarebyte.github.io/ontologies/2018/user-interface#label', hint: 'http://flarebyte.github.io/ontologies/2018/user-interface#hint', prominence: 'http://flarebyte.github.io/ontologies/2018/user-interface#prominence', style: 'http://flarebyte.github.io/ontologies/2018/user-interface#style', query: 'http://flarebyte.github.io/ontologies/2018/user-interface#query', regex: 'http://flarebyte.github.io/ontologies/2018/user-interface#regex', maxLength: 'http://flarebyte.github.io/ontologies/2018/user-interface#maximum-length', minLines: 'http://flarebyte.github.io/ontologies/2018/user-interface#minimum-lines', maxLines: 'http://flarebyte.github.io/ontologies/2018/user-interface#maximum-lines', filtering: 'http://flarebyte.github.io/ontologies/2018/user-interface#filtering', sorting: 'http://flarebyte.github.io/ontologies/2018/user-interface#sorting', minimumInt: 'http://flarebyte.github.io/ontologies/2018/user-interface#minimum-int', maximumInt: 'http://flarebyte.github.io/ontologies/2018/user-interface#maximum-int', stepsInt: 'http://flarebyte.github.io/ontologies/2018/user-interface#steps-int', format: 'http://flarebyte.github.io/ontologies/2018/user-interface#format', checkbox: 'http://flarebyte.github.io/ontologies/2018/user-interface#checkbox', incSpinner: 'http://flarebyte.github.io/ontologies/2018/user-interface#inc-spinner', mediumText: 'http://flarebyte.github.io/ontologies/2018/user-interface#medium-text', boundedListbox: 'http://flarebyte.github.io/ontologies/2018/user-interface#bounded-listbox', unboundedListbox: 'http://flarebyte.github.io/ontologies/2018/user-interface#unbounded-listbox', rangeSlider: 'http://flarebyte.github.io/ontologies/2018/user-interface#range-slider', dateViewer: 'http://flarebyte.github.io/ontologies/2018/user-interface#date-viewer', longText: 'http://flarebyte.github.io/ontologies/2018/user-interface#long-text', textArea: 'http://flarebyte.github.io/ontologies/2018/user-interface#text-area', markdownArea: 'http://flarebyte.github.io/ontologies/2018/user-interface#markdown-area', boundedradio: 'http://flarebyte.github.io/ontologies/2018/user-interface#bounded-radio'};
var _flarebyte$bubblegum_outlook$Bubblegum_Outlook$fieldToProperties = function (field) {
	return {
		ctor: '::',
		_0: {ctor: '_Tuple2', _0: _flarebyte$bubblegum_outlook$Bubblegum_Outlook$u.id, _1: field.id},
		_1: {
			ctor: '::',
			_0: {ctor: '_Tuple2', _0: _flarebyte$bubblegum_outlook$Bubblegum_Outlook$u.label, _1: field.label},
			_1: {
				ctor: '::',
				_0: {ctor: '_Tuple2', _0: _flarebyte$bubblegum_outlook$Bubblegum_Outlook$u.hint, _1: field.hint},
				_1: {
					ctor: '::',
					_0: {
						ctor: '_Tuple2',
						_0: _flarebyte$bubblegum_outlook$Bubblegum_Outlook$u.prominence,
						_1: _flarebyte$bubblegum_outlook$Bubblegum_Outlook$prominenceToString(field.prominence)
					},
					_1: {
						ctor: '::',
						_0: {ctor: '_Tuple2', _0: _flarebyte$bubblegum_outlook$Bubblegum_Outlook$u.query, _1: field.query},
						_1: {
							ctor: '::',
							_0: {ctor: '_Tuple2', _0: _flarebyte$bubblegum_outlook$Bubblegum_Outlook$u.style, _1: field.style},
							_1: {ctor: '[]'}
						}
					}
				}
			}
		}
	};
};
var _flarebyte$bubblegum_outlook$Bubblegum_Outlook$widgetModelToPropertyList = function (model) {
	var _p4 = model;
	switch (_p4.ctor) {
		case 'CheckboxWidget':
			return _flarebyte$bubblegum_outlook$Bubblegum_Outlook$fieldToProperties(_p4._0);
		case 'IncSpinnerWidget':
			var _p5 = _p4._0;
			return A2(
				_elm_lang$core$Basics_ops['++'],
				_flarebyte$bubblegum_outlook$Bubblegum_Outlook$fieldToProperties(_p5.field),
				{
					ctor: '::',
					_0: {
						ctor: '_Tuple2',
						_0: _flarebyte$bubblegum_outlook$Bubblegum_Outlook$u.minimumInt,
						_1: _elm_lang$core$Basics$toString(_p5.minimum)
					},
					_1: {
						ctor: '::',
						_0: {
							ctor: '_Tuple2',
							_0: _flarebyte$bubblegum_outlook$Bubblegum_Outlook$u.maximumInt,
							_1: _elm_lang$core$Basics$toString(_p5.maximum)
						},
						_1: {
							ctor: '::',
							_0: {
								ctor: '_Tuple2',
								_0: _flarebyte$bubblegum_outlook$Bubblegum_Outlook$u.stepsInt,
								_1: _elm_lang$core$Basics$toString(_p5.steps)
							},
							_1: {ctor: '[]'}
						}
					}
				});
		case 'MediumTextWidget':
			var _p6 = _p4._0;
			return A2(
				_elm_lang$core$Basics_ops['++'],
				_flarebyte$bubblegum_outlook$Bubblegum_Outlook$fieldToProperties(_p6.field),
				{
					ctor: '::',
					_0: {
						ctor: '_Tuple2',
						_0: _flarebyte$bubblegum_outlook$Bubblegum_Outlook$u.maxLength,
						_1: _elm_lang$core$Basics$toString(_p6.maxLength)
					},
					_1: {
						ctor: '::',
						_0: {
							ctor: '_Tuple2',
							_0: _flarebyte$bubblegum_outlook$Bubblegum_Outlook$u.regex,
							_1: A2(_elm_lang$core$Maybe$withDefault, '', _p6.regex)
						},
						_1: {ctor: '[]'}
					}
				});
		case 'BoundedListBoxWidget':
			var _p7 = _p4._0;
			return A2(
				_elm_lang$core$Basics_ops['++'],
				_flarebyte$bubblegum_outlook$Bubblegum_Outlook$fieldToProperties(_p7.field),
				{
					ctor: '::',
					_0: {
						ctor: '_Tuple2',
						_0: _flarebyte$bubblegum_outlook$Bubblegum_Outlook$u.filtering,
						_1: A2(_elm_lang$core$Maybe$withDefault, '', _p7.filtering)
					},
					_1: {
						ctor: '::',
						_0: {
							ctor: '_Tuple2',
							_0: _flarebyte$bubblegum_outlook$Bubblegum_Outlook$u.sorting,
							_1: A2(_elm_lang$core$Maybe$withDefault, '', _p7.sorting)
						},
						_1: {ctor: '[]'}
					}
				});
		case 'UnboundedListBoxWidget':
			var _p8 = _p4._0;
			return A2(
				_elm_lang$core$Basics_ops['++'],
				_flarebyte$bubblegum_outlook$Bubblegum_Outlook$fieldToProperties(_p8.field),
				{
					ctor: '::',
					_0: {
						ctor: '_Tuple2',
						_0: _flarebyte$bubblegum_outlook$Bubblegum_Outlook$u.filtering,
						_1: A2(_elm_lang$core$Maybe$withDefault, '', _p8.filtering)
					},
					_1: {
						ctor: '::',
						_0: {
							ctor: '_Tuple2',
							_0: _flarebyte$bubblegum_outlook$Bubblegum_Outlook$u.sorting,
							_1: A2(_elm_lang$core$Maybe$withDefault, '', _p8.sorting)
						},
						_1: {ctor: '[]'}
					}
				});
		case 'RangeSliderWidget':
			var _p9 = _p4._0;
			return A2(
				_elm_lang$core$Basics_ops['++'],
				_flarebyte$bubblegum_outlook$Bubblegum_Outlook$fieldToProperties(_p9.field),
				{
					ctor: '::',
					_0: {
						ctor: '_Tuple2',
						_0: _flarebyte$bubblegum_outlook$Bubblegum_Outlook$u.minimumInt,
						_1: _elm_lang$core$Basics$toString(_p9.minimum)
					},
					_1: {
						ctor: '::',
						_0: {
							ctor: '_Tuple2',
							_0: _flarebyte$bubblegum_outlook$Bubblegum_Outlook$u.maximumInt,
							_1: _elm_lang$core$Basics$toString(_p9.maximum)
						},
						_1: {
							ctor: '::',
							_0: {
								ctor: '_Tuple2',
								_0: _flarebyte$bubblegum_outlook$Bubblegum_Outlook$u.stepsInt,
								_1: _elm_lang$core$Basics$toString(_p9.steps)
							},
							_1: {ctor: '[]'}
						}
					}
				});
		case 'DateViewerWidget':
			var _p10 = _p4._0;
			return A2(
				_elm_lang$core$Basics_ops['++'],
				_flarebyte$bubblegum_outlook$Bubblegum_Outlook$fieldToProperties(_p10.field),
				{
					ctor: '::',
					_0: {ctor: '_Tuple2', _0: _flarebyte$bubblegum_outlook$Bubblegum_Outlook$u.format, _1: _p10.format},
					_1: {ctor: '[]'}
				});
		case 'LongTextWidget':
			var _p11 = _p4._0;
			return A2(
				_elm_lang$core$Basics_ops['++'],
				_flarebyte$bubblegum_outlook$Bubblegum_Outlook$fieldToProperties(_p11.field),
				{
					ctor: '::',
					_0: {
						ctor: '_Tuple2',
						_0: _flarebyte$bubblegum_outlook$Bubblegum_Outlook$u.maxLength,
						_1: _elm_lang$core$Basics$toString(_p11.maxLength)
					},
					_1: {
						ctor: '::',
						_0: {
							ctor: '_Tuple2',
							_0: _flarebyte$bubblegum_outlook$Bubblegum_Outlook$u.regex,
							_1: A2(_elm_lang$core$Maybe$withDefault, '', _p11.regex)
						},
						_1: {ctor: '[]'}
					}
				});
		case 'TextAreaWidget':
			var _p12 = _p4._0;
			return A2(
				_elm_lang$core$Basics_ops['++'],
				_flarebyte$bubblegum_outlook$Bubblegum_Outlook$fieldToProperties(_p12.field),
				{
					ctor: '::',
					_0: {
						ctor: '_Tuple2',
						_0: _flarebyte$bubblegum_outlook$Bubblegum_Outlook$u.minLines,
						_1: _elm_lang$core$Basics$toString(_p12.minLines)
					},
					_1: {
						ctor: '::',
						_0: {
							ctor: '_Tuple2',
							_0: _flarebyte$bubblegum_outlook$Bubblegum_Outlook$u.maxLines,
							_1: _elm_lang$core$Basics$toString(_p12.maxLines)
						},
						_1: {ctor: '[]'}
					}
				});
		case 'MarkdownAreaWidget':
			var _p13 = _p4._0;
			return A2(
				_elm_lang$core$Basics_ops['++'],
				_flarebyte$bubblegum_outlook$Bubblegum_Outlook$fieldToProperties(_p13.field),
				{
					ctor: '::',
					_0: {
						ctor: '_Tuple2',
						_0: _flarebyte$bubblegum_outlook$Bubblegum_Outlook$u.minLines,
						_1: _elm_lang$core$Basics$toString(_p13.minLines)
					},
					_1: {
						ctor: '::',
						_0: {
							ctor: '_Tuple2',
							_0: _flarebyte$bubblegum_outlook$Bubblegum_Outlook$u.maxLines,
							_1: _elm_lang$core$Basics$toString(_p13.maxLines)
						},
						_1: {ctor: '[]'}
					}
				});
		default:
			var _p14 = _p4._0;
			return A2(
				_elm_lang$core$Basics_ops['++'],
				_flarebyte$bubblegum_outlook$Bubblegum_Outlook$fieldToProperties(_p14.field),
				{
					ctor: '::',
					_0: {
						ctor: '_Tuple2',
						_0: _flarebyte$bubblegum_outlook$Bubblegum_Outlook$u.filtering,
						_1: A2(_elm_lang$core$Maybe$withDefault, '', _p14.filtering)
					},
					_1: {
						ctor: '::',
						_0: {
							ctor: '_Tuple2',
							_0: _flarebyte$bubblegum_outlook$Bubblegum_Outlook$u.sorting,
							_1: A2(_elm_lang$core$Maybe$withDefault, '', _p14.sorting)
						},
						_1: {ctor: '[]'}
					}
				});
	}
};
var _flarebyte$bubblegum_outlook$Bubblegum_Outlook$widgetModelToTriple = F2(
	function (subject, model) {
		return A2(
			_elm_lang$core$List$sortBy,
			function (_) {
				return _.predicate;
			},
			A2(
				_flarebyte$bubblegum_outlook$Bubblegum_Outlook$createListOfTriple,
				subject,
				_flarebyte$bubblegum_outlook$Bubblegum_Outlook$widgetModelToPropertyList(model)));
	});
var _flarebyte$bubblegum_outlook$Bubblegum_Outlook$p = 'http://flarebyte.github.io/ontologies/2018/user-interface#';
var _flarebyte$bubblegum_outlook$Bubblegum_Outlook$Triple = F3(
	function (a, b, c) {
		return {subject: a, predicate: b, object: c};
	});
var _flarebyte$bubblegum_outlook$Bubblegum_Outlook$FieldModel = F7(
	function (a, b, c, d, e, f, g) {
		return {id: a, position: b, label: c, hint: d, prominence: e, style: f, query: g};
	});
var _flarebyte$bubblegum_outlook$Bubblegum_Outlook$TextModel = F3(
	function (a, b, c) {
		return {field: a, regex: b, maxLength: c};
	});
var _flarebyte$bubblegum_outlook$Bubblegum_Outlook$TextAreaModel = F3(
	function (a, b, c) {
		return {field: a, minLines: b, maxLines: c};
	});
var _flarebyte$bubblegum_outlook$Bubblegum_Outlook$LinkedFieldModel = F3(
	function (a, b, c) {
		return {field: a, filtering: b, sorting: c};
	});
var _flarebyte$bubblegum_outlook$Bubblegum_Outlook$IncSpinnerModel = F4(
	function (a, b, c, d) {
		return {field: a, minimum: b, maximum: c, steps: d};
	});
var _flarebyte$bubblegum_outlook$Bubblegum_Outlook$DateViewerModel = F2(
	function (a, b) {
		return {field: a, format: b};
	});
var _flarebyte$bubblegum_outlook$Bubblegum_Outlook$PanelModel = F2(
	function (a, b) {
		return {field: a, widgets: b};
	});
var _flarebyte$bubblegum_outlook$Bubblegum_Outlook$SectionModel = F2(
	function (a, b) {
		return {field: a, panels: b};
	});
var _flarebyte$bubblegum_outlook$Bubblegum_Outlook$DivisionModel = F2(
	function (a, b) {
		return {field: a, sections: b};
	});
var _flarebyte$bubblegum_outlook$Bubblegum_Outlook$PanelValues = F2(
	function (a, b) {
		return {model: a, values: b};
	});
var _flarebyte$bubblegum_outlook$Bubblegum_Outlook$SectionValues = F2(
	function (a, b) {
		return {model: a, values: b};
	});
var _flarebyte$bubblegum_outlook$Bubblegum_Outlook$DivisionValues = F2(
	function (a, b) {
		return {model: a, values: b};
	});
var _flarebyte$bubblegum_outlook$Bubblegum_Outlook$Important = {ctor: 'Important'};
var _flarebyte$bubblegum_outlook$Bubblegum_Outlook$Visible = {ctor: 'Visible'};
var _flarebyte$bubblegum_outlook$Bubblegum_Outlook$ReadOnly = {ctor: 'ReadOnly'};
var _flarebyte$bubblegum_outlook$Bubblegum_Outlook$Hidden = {ctor: 'Hidden'};
var _flarebyte$bubblegum_outlook$Bubblegum_Outlook$toProminence = function (str) {
	var _p15 = str;
	if (_p15.ctor === 'Nothing') {
		return _flarebyte$bubblegum_outlook$Bubblegum_Outlook$Visible;
	} else {
		switch (_p15._0) {
			case 'visible':
				return _flarebyte$bubblegum_outlook$Bubblegum_Outlook$Visible;
			case 'hidden':
				return _flarebyte$bubblegum_outlook$Bubblegum_Outlook$Hidden;
			case 'read-only':
				return _flarebyte$bubblegum_outlook$Bubblegum_Outlook$ReadOnly;
			case 'important':
				return _flarebyte$bubblegum_outlook$Bubblegum_Outlook$Important;
			default:
				return _flarebyte$bubblegum_outlook$Bubblegum_Outlook$Visible;
		}
	}
};
var _flarebyte$bubblegum_outlook$Bubblegum_Outlook$createFieldModel = function (keyValueList) {
	return {
		id: A2(
			_elm_lang$core$Maybe$withDefault,
			'',
			A2(_flarebyte$bubblegum_outlook$Bubblegum_Outlook$findProperty, _flarebyte$bubblegum_outlook$Bubblegum_Outlook$u.id, keyValueList)),
		position: A2(
			_flarebyte$bubblegum_outlook$Bubblegum_Outlook$toIntOrDefault,
			0,
			A2(_flarebyte$bubblegum_outlook$Bubblegum_Outlook$findProperty, _flarebyte$bubblegum_outlook$Bubblegum_Outlook$u.position, keyValueList)),
		label: A2(
			_elm_lang$core$Maybe$withDefault,
			'',
			A2(_flarebyte$bubblegum_outlook$Bubblegum_Outlook$findProperty, _flarebyte$bubblegum_outlook$Bubblegum_Outlook$u.label, keyValueList)),
		hint: A2(
			_elm_lang$core$Maybe$withDefault,
			'',
			A2(_flarebyte$bubblegum_outlook$Bubblegum_Outlook$findProperty, _flarebyte$bubblegum_outlook$Bubblegum_Outlook$u.hint, keyValueList)),
		prominence: _flarebyte$bubblegum_outlook$Bubblegum_Outlook$toProminence(
			A2(_flarebyte$bubblegum_outlook$Bubblegum_Outlook$findProperty, _flarebyte$bubblegum_outlook$Bubblegum_Outlook$u.prominence, keyValueList)),
		style: A2(
			_elm_lang$core$Maybe$withDefault,
			'',
			A2(_flarebyte$bubblegum_outlook$Bubblegum_Outlook$findProperty, _flarebyte$bubblegum_outlook$Bubblegum_Outlook$u.style, keyValueList)),
		query: A2(
			_elm_lang$core$Maybe$withDefault,
			'',
			A2(_flarebyte$bubblegum_outlook$Bubblegum_Outlook$findProperty, _flarebyte$bubblegum_outlook$Bubblegum_Outlook$u.query, keyValueList))
	};
};
var _flarebyte$bubblegum_outlook$Bubblegum_Outlook$BoundedRadioWidget = function (a) {
	return {ctor: 'BoundedRadioWidget', _0: a};
};
var _flarebyte$bubblegum_outlook$Bubblegum_Outlook$MarkdownAreaWidget = function (a) {
	return {ctor: 'MarkdownAreaWidget', _0: a};
};
var _flarebyte$bubblegum_outlook$Bubblegum_Outlook$TextAreaWidget = function (a) {
	return {ctor: 'TextAreaWidget', _0: a};
};
var _flarebyte$bubblegum_outlook$Bubblegum_Outlook$LongTextWidget = function (a) {
	return {ctor: 'LongTextWidget', _0: a};
};
var _flarebyte$bubblegum_outlook$Bubblegum_Outlook$DateViewerWidget = function (a) {
	return {ctor: 'DateViewerWidget', _0: a};
};
var _flarebyte$bubblegum_outlook$Bubblegum_Outlook$RangeSliderWidget = function (a) {
	return {ctor: 'RangeSliderWidget', _0: a};
};
var _flarebyte$bubblegum_outlook$Bubblegum_Outlook$UnboundedListBoxWidget = function (a) {
	return {ctor: 'UnboundedListBoxWidget', _0: a};
};
var _flarebyte$bubblegum_outlook$Bubblegum_Outlook$BoundedListBoxWidget = function (a) {
	return {ctor: 'BoundedListBoxWidget', _0: a};
};
var _flarebyte$bubblegum_outlook$Bubblegum_Outlook$MediumTextWidget = function (a) {
	return {ctor: 'MediumTextWidget', _0: a};
};
var _flarebyte$bubblegum_outlook$Bubblegum_Outlook$IncSpinnerWidget = function (a) {
	return {ctor: 'IncSpinnerWidget', _0: a};
};
var _flarebyte$bubblegum_outlook$Bubblegum_Outlook$CheckboxWidget = function (a) {
	return {ctor: 'CheckboxWidget', _0: a};
};
var _flarebyte$bubblegum_outlook$Bubblegum_Outlook$createWidgetModel = function (keyValueList) {
	var fieldModel = _flarebyte$bubblegum_outlook$Bubblegum_Outlook$createFieldModel(keyValueList);
	var widgetType = A2(
		_elm_lang$core$Maybe$withDefault,
		'long-text',
		A2(_flarebyte$bubblegum_outlook$Bubblegum_Outlook$findProperty, _flarebyte$bubblegum_outlook$Bubblegum_Outlook$u.widgetType, keyValueList));
	var _p16 = widgetType;
	switch (_p16) {
		case 'http://flarebyte.github.io/ontologies/2018/user-interface#checkbox':
			return _flarebyte$bubblegum_outlook$Bubblegum_Outlook$CheckboxWidget(fieldModel);
		case 'http://flarebyte.github.io/ontologies/2018/user-interface#inc-spinner':
			return _flarebyte$bubblegum_outlook$Bubblegum_Outlook$IncSpinnerWidget(
				{
					field: fieldModel,
					minimum: A2(
						_flarebyte$bubblegum_outlook$Bubblegum_Outlook$toIntOrDefault,
						0,
						A2(_flarebyte$bubblegum_outlook$Bubblegum_Outlook$findProperty, _flarebyte$bubblegum_outlook$Bubblegum_Outlook$u.minimumInt, keyValueList)),
					maximum: A2(
						_flarebyte$bubblegum_outlook$Bubblegum_Outlook$toIntOrDefault,
						10,
						A2(_flarebyte$bubblegum_outlook$Bubblegum_Outlook$findProperty, _flarebyte$bubblegum_outlook$Bubblegum_Outlook$u.maximumInt, keyValueList)),
					steps: A2(
						_flarebyte$bubblegum_outlook$Bubblegum_Outlook$toIntOrDefault,
						1,
						A2(_flarebyte$bubblegum_outlook$Bubblegum_Outlook$findProperty, _flarebyte$bubblegum_outlook$Bubblegum_Outlook$u.stepsInt, keyValueList))
				});
		case 'http://flarebyte.github.io/ontologies/2018/user-interface#medium-text':
			return _flarebyte$bubblegum_outlook$Bubblegum_Outlook$MediumTextWidget(
				{
					field: fieldModel,
					regex: A2(_flarebyte$bubblegum_outlook$Bubblegum_Outlook$findProperty, _flarebyte$bubblegum_outlook$Bubblegum_Outlook$u.regex, keyValueList),
					maxLength: A2(
						_flarebyte$bubblegum_outlook$Bubblegum_Outlook$toIntOrDefault,
						40,
						A2(_flarebyte$bubblegum_outlook$Bubblegum_Outlook$findProperty, _flarebyte$bubblegum_outlook$Bubblegum_Outlook$u.maxLength, keyValueList))
				});
		case 'http://flarebyte.github.io/ontologies/2018/user-interface#bounded-listbox':
			return _flarebyte$bubblegum_outlook$Bubblegum_Outlook$BoundedListBoxWidget(
				{
					field: fieldModel,
					filtering: A2(_flarebyte$bubblegum_outlook$Bubblegum_Outlook$findProperty, _flarebyte$bubblegum_outlook$Bubblegum_Outlook$u.filtering, keyValueList),
					sorting: A2(_flarebyte$bubblegum_outlook$Bubblegum_Outlook$findProperty, _flarebyte$bubblegum_outlook$Bubblegum_Outlook$u.sorting, keyValueList)
				});
		case 'http://flarebyte.github.io/ontologies/2018/user-interface#unbounded-listbox':
			return _flarebyte$bubblegum_outlook$Bubblegum_Outlook$UnboundedListBoxWidget(
				{
					field: fieldModel,
					filtering: A2(_flarebyte$bubblegum_outlook$Bubblegum_Outlook$findProperty, _flarebyte$bubblegum_outlook$Bubblegum_Outlook$u.filtering, keyValueList),
					sorting: A2(_flarebyte$bubblegum_outlook$Bubblegum_Outlook$findProperty, _flarebyte$bubblegum_outlook$Bubblegum_Outlook$u.sorting, keyValueList)
				});
		case 'http://flarebyte.github.io/ontologies/2018/user-interface#range-slider':
			return _flarebyte$bubblegum_outlook$Bubblegum_Outlook$RangeSliderWidget(
				{
					field: fieldModel,
					minimum: A2(
						_flarebyte$bubblegum_outlook$Bubblegum_Outlook$toIntOrDefault,
						0,
						A2(_flarebyte$bubblegum_outlook$Bubblegum_Outlook$findProperty, _flarebyte$bubblegum_outlook$Bubblegum_Outlook$u.minimumInt, keyValueList)),
					maximum: A2(
						_flarebyte$bubblegum_outlook$Bubblegum_Outlook$toIntOrDefault,
						10,
						A2(_flarebyte$bubblegum_outlook$Bubblegum_Outlook$findProperty, _flarebyte$bubblegum_outlook$Bubblegum_Outlook$u.maximumInt, keyValueList)),
					steps: A2(
						_flarebyte$bubblegum_outlook$Bubblegum_Outlook$toIntOrDefault,
						1,
						A2(_flarebyte$bubblegum_outlook$Bubblegum_Outlook$findProperty, _flarebyte$bubblegum_outlook$Bubblegum_Outlook$u.stepsInt, keyValueList))
				});
		case 'http://flarebyte.github.io/ontologies/2018/user-interface#date-viewer':
			return _flarebyte$bubblegum_outlook$Bubblegum_Outlook$DateViewerWidget(
				{
					field: fieldModel,
					format: A2(
						_elm_lang$core$Maybe$withDefault,
						'',
						A2(_flarebyte$bubblegum_outlook$Bubblegum_Outlook$findProperty, _flarebyte$bubblegum_outlook$Bubblegum_Outlook$u.format, keyValueList))
				});
		case 'http://flarebyte.github.io/ontologies/2018/user-interface#long-text':
			return _flarebyte$bubblegum_outlook$Bubblegum_Outlook$LongTextWidget(
				{
					field: fieldModel,
					regex: A2(_flarebyte$bubblegum_outlook$Bubblegum_Outlook$findProperty, _flarebyte$bubblegum_outlook$Bubblegum_Outlook$u.regex, keyValueList),
					maxLength: A2(
						_flarebyte$bubblegum_outlook$Bubblegum_Outlook$toIntOrDefault,
						80,
						A2(_flarebyte$bubblegum_outlook$Bubblegum_Outlook$findProperty, _flarebyte$bubblegum_outlook$Bubblegum_Outlook$u.maxLength, keyValueList))
				});
		case 'http://flarebyte.github.io/ontologies/2018/user-interface#text-area':
			return _flarebyte$bubblegum_outlook$Bubblegum_Outlook$TextAreaWidget(
				{
					field: fieldModel,
					minLines: A2(
						_flarebyte$bubblegum_outlook$Bubblegum_Outlook$toIntOrDefault,
						3,
						A2(_flarebyte$bubblegum_outlook$Bubblegum_Outlook$findProperty, _flarebyte$bubblegum_outlook$Bubblegum_Outlook$u.minLines, keyValueList)),
					maxLines: A2(
						_flarebyte$bubblegum_outlook$Bubblegum_Outlook$toIntOrDefault,
						10,
						A2(_flarebyte$bubblegum_outlook$Bubblegum_Outlook$findProperty, _flarebyte$bubblegum_outlook$Bubblegum_Outlook$u.maxLines, keyValueList))
				});
		case 'http://flarebyte.github.io/ontologies/2018/user-interface#markdown-area':
			return _flarebyte$bubblegum_outlook$Bubblegum_Outlook$MarkdownAreaWidget(
				{
					field: fieldModel,
					minLines: A2(
						_flarebyte$bubblegum_outlook$Bubblegum_Outlook$toIntOrDefault,
						3,
						A2(_flarebyte$bubblegum_outlook$Bubblegum_Outlook$findProperty, _flarebyte$bubblegum_outlook$Bubblegum_Outlook$u.minLines, keyValueList)),
					maxLines: A2(
						_flarebyte$bubblegum_outlook$Bubblegum_Outlook$toIntOrDefault,
						10,
						A2(_flarebyte$bubblegum_outlook$Bubblegum_Outlook$findProperty, _flarebyte$bubblegum_outlook$Bubblegum_Outlook$u.maxLines, keyValueList))
				});
		case 'http://flarebyte.github.io/ontologies/2018/user-interface#bounded-radio':
			return _flarebyte$bubblegum_outlook$Bubblegum_Outlook$BoundedRadioWidget(
				{
					field: fieldModel,
					filtering: A2(_flarebyte$bubblegum_outlook$Bubblegum_Outlook$findProperty, _flarebyte$bubblegum_outlook$Bubblegum_Outlook$u.filtering, keyValueList),
					sorting: A2(_flarebyte$bubblegum_outlook$Bubblegum_Outlook$findProperty, _flarebyte$bubblegum_outlook$Bubblegum_Outlook$u.sorting, keyValueList)
				});
		default:
			return _flarebyte$bubblegum_outlook$Bubblegum_Outlook$MediumTextWidget(
				{
					field: fieldModel,
					regex: A2(_flarebyte$bubblegum_outlook$Bubblegum_Outlook$findProperty, _flarebyte$bubblegum_outlook$Bubblegum_Outlook$u.regex, keyValueList),
					maxLength: A2(
						_flarebyte$bubblegum_outlook$Bubblegum_Outlook$toIntOrDefault,
						40,
						A2(_flarebyte$bubblegum_outlook$Bubblegum_Outlook$findProperty, _flarebyte$bubblegum_outlook$Bubblegum_Outlook$u.maxLength, keyValueList))
				});
	}
};
var _flarebyte$bubblegum_outlook$Bubblegum_Outlook$Widget = function (a) {
	return {ctor: 'Widget', _0: a};
};
